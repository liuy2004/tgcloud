<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiger.tgcloud.uac.repository.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.tiger.tgcloud.uac.model.domain.RoleInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="rolename" jdbcType="VARCHAR" property="rolename"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="creator_id" jdbcType="BIGINT" property="creatorId"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="update_operator" jdbcType="VARCHAR" property="updateOperator"/>
        <result column="update_operator_id" jdbcType="BIGINT" property="updateOperatorId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, rolename, status, description, version, creator, creator_id, created_time,
    update_operator, update_operator_id, update_time
  </sql>
    <sql id="Base_Colunm_Where">
        <if test="rolename != null">
            and ${alias}.rolename = #{rolename,jdbcType=VARCHAR}
        </if>
        <if test="status != null">
            and ${alias}.status = #{status,jdbcType=INTEGER}
        </if>
        <if test="description != null">
            and ${alias}.description = #{description,jdbcType=VARCHAR}
        </if>
        <if test="version != null">
            and ${alias}.version = #{version,jdbcType=INTEGER}
        </if>
        <if test="creator != null">
            and ${alias}.creator = #{creator,jdbcType=VARCHAR}
        </if>
        <if test="creatorId != null">
            and ${alias}.creator_id = #{creatorId,jdbcType=BIGINT}
        </if>
        <if test="createdTime != null">
            and ${alias}.created_time = #{createdTime,jdbcType=TIMESTAMP}
        </if>
        <if test="updateOperator != null">
            and ${alias}.update_operator = #{updateOperator,jdbcType=VARCHAR}
        </if>
        <if test="updateOperatorId != null">
            and ${alias}.update_operator_id = #{updateOperatorId,jdbcType=BIGINT}
        </if>
        <if test="updateTime != null">
            and ${alias}.update_time = #{updateTime,jdbcType=TIMESTAMP}
        </if>
    </sql>

    <select id="selectByCondition" parameterType="com.tiger.tgcloud.uac.model.query.RoleParam"
            resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM uac_role u
        <where>
            <if test="rolename != null">
                and u.rolename = #{rolename,jdbcType=VARCHAR}
            </if>
            <if test="status != null">
                and u.status = #{status,jdbcType=INTEGER}
            </if>
            <if test="description != null">
                and u.description = #{description,jdbcType=VARCHAR}
            </if>
        </where>
        order by u.update_time desc
    </select>

    <select id="selectByUserName" resultMap="BaseResultMap">
        SELECT r.*
        FROM uac_role r
            INNER JOIN uac_user_role ur ON r.id = ur.roleid
            INNER JOIN uac_user u ON ur.userid = u.id
        WHERE u.username = #{userName,jdbcType=VARCHAR}
    </select>

    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT r.*
        FROM uac_role r
            INNER JOIN uac_user_role ur ON r.id = ur.roleid
            INNER JOIN uac_user u ON ur.userid = u.id
        WHERE u.id = #{userId,jdbcType=BIGINT}
    </select>

    <delete id="deleteRolePermRelationByRoleId">
        DELETE FROM uac_role_permission
        WHERE roleid = #{roleId,jdbcType=BIGINT}
    </delete>

    <insert id="insertRolePermRelation">
        INSERT uac_role_permission (roleid, permid)
        VALUES (#{roleId,jdbcType=BIGINT}, #{permId,jdbcType=BIGINT})
    </insert>
</mapper>